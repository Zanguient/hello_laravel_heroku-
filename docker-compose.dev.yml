version: "3.1"
services:

  redis:
    image: redis:alpine
    container_name: ${PROJECT_NAME}redis
    ports:
      - "6382:6379"
    networks:
      testing_nets:
        ipv4_address: 172.28.1.8

  postgres:
    image: postgres:latest
    container_name: ${PROJECT_NAME}-postgres
    volumes:
      - "./sourcefiles/postgres:/var/lib/postgresql/data"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      testing_nets:
        ipv4_address: 172.28.1.2
  webserver:
    image: nginx:alpine
    depends_on:
      - postgres
      - redis
      - php-fpm
    container_name: ${PROJECT_NAME}-webserver
    working_dir: /application
    volumes:
      - ./application:/application
      - ./sourcefiles/nginx:/etc/nginx/conf.d
    ports:
      - "80:80"
    networks:
      testing_nets:
        ipv4_address: 172.28.1.3

  php-fpm:
    build: sourcefiles/php-fpm
    container_name: ${PROJECT_NAME}-php-fpm
    working_dir: /application
    volumes:
      - ./application:/application
      - ./sourcefiles/php-fpm/php-ini-overrides.ini:/etc/php/7.1/fpm/conf.d/99-overrides.ini
    links:
      - postgres
      - redis
    networks:
      testing_nets:
        ipv4_address: 172.28.1.4
networks:
  testing_nets:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
